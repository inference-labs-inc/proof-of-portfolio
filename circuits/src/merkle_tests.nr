use components::core::merkle::{hash_signal, merkle_inclusion_check, TradingSignal};

#[test]
fn test_merkle_hash_tampering_fails() {
    let signal = TradingSignal {
        miner_hotkey: [0, 0],
        trade_pair_id: 0,
        order_type: 1,
        leverage_scaled: 100,
        price_scaled: 10000,
        processed_ms: 1000,
        order_uuid: [0x1111111111111111, 0x1111111111111111],
        position_uuid: [0x1111111111111111, 0x1111111111111111],
        src: 0,
    };

    let signal_hash = hash_signal(signal);
    let merkle_root = 17778988922844651442151524199383189727498865359869084356161872608149992587898;

    let correct_path_elements = [
        8781215305724307628835403280524336936587049080265562041152212763888318503359,
        21490756228577710735950935021877232011445636450711537213489200520795247189645,
        15315010434373228768515045847926951401477884091230007539886053341418284848464,
        5337862867875115524214345623787399434458805399542698299566394924328104755643,
        3120476356109763337029616398980250392595092048585115036648644377950387540381,
        1713640813182293640789595917939697287037938209669543521747647487822835744672,
        9870578620418080934067112655515947531367044167924989913367448386461769503295,
        17440229081536261521163509218823958459090345145899915276583598585919842079403,
    ];
    let path_indices = [0, 0, 0, 0, 0, 0, 0, 0];

    let valid_verification = merkle_inclusion_check(
        signal_hash,
        merkle_root,
        correct_path_elements,
        path_indices,
    );
    assert(valid_verification == true);

    let tampered_path_elements = [
        8781215305724307628835403280524336936587049080265562041152212763888318503359 + 1,
        21490756228577710735950935021877232011445636450711537213489200520795247189645,
        15315010434373228768515045847926951401477884091230007539886053341418284848464,
        5337862867875115524214345623787399434458805399542698299566394924328104755643,
        3120476356109763337029616398980250392595092048585115036648644377950387540381,
        1713640813182293640789595917939697287037938209669543521747647487822835744672,
        9870578620418080934067112655515947531367044167924989913367448386461769503295,
        17440229081536261521163509218823958459090345145899915276583598585919842079403,
    ];

    let invalid_verification = merkle_inclusion_check(
        signal_hash,
        merkle_root,
        tampered_path_elements,
        path_indices,
    );
    assert(invalid_verification == false);
}

#[test]
fn test_signal_tampering_fails() {
    let original_signal = TradingSignal {
        miner_hotkey: [0, 0],
        trade_pair_id: 0,
        order_type: 1,
        leverage_scaled: 100,
        price_scaled: 10000,
        processed_ms: 1000,
        order_uuid: [0x1111111111111111, 0x1111111111111111],
        position_uuid: [0x1111111111111111, 0x1111111111111111],
        src: 0,
    };

    let tampered_signal = TradingSignal {
        miner_hotkey: [0, 0],
        trade_pair_id: 0,
        order_type: 1,
        leverage_scaled: 100,
        price_scaled: 99999,
        processed_ms: 1000,
        order_uuid: [0x1111111111111111, 0x1111111111111111],
        position_uuid: [0x1111111111111111, 0x1111111111111111],
        src: 0,
    };

    let original_hash = hash_signal(original_signal);
    let tampered_hash = hash_signal(tampered_signal);

    assert(original_hash != tampered_hash);

    let merkle_root = 17778988922844651442151524199383189727498865359869084356161872608149992587898;
    let path_elements = [
        8781215305724307628835403280524336936587049080265562041152212763888318503359,
        21490756228577710735950935021877232011445636450711537213489200520795247189645,
        15315010434373228768515045847926951401477884091230007539886053341418284848464,
        5337862867875115524214345623787399434458805399542698299566394924328104755643,
        3120476356109763337029616398980250392595092048585115036648644377950387540381,
        1713640813182293640789595917939697287037938209669543521747647487822835744672,
        9870578620418080934067112655515947531367044167924989913367448386461769503295,
        17440229081536261521163509218823958459090345145899915276583598585919842079403,
    ];
    let path_indices = [0, 0, 0, 0, 0, 0, 0, 0];

    let valid_verification =
        merkle_inclusion_check(original_hash, merkle_root, path_elements, path_indices);
    assert(valid_verification == true);

    let invalid_verification =
        merkle_inclusion_check(tampered_hash, merkle_root, path_elements, path_indices);
    assert(invalid_verification == false);
}
